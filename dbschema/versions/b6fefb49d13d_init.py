"""init

Revision ID: b6fefb49d13d
Revises:
Create Date: 2017-03-20 19:39:35.553024

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b6fefb49d13d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('todo_user',
                    sa.Column('uuid', postgresql.UUID(), server_default=sa.text(
                        'uuid_generate_v1mc()'), nullable=False),
                    sa.Column('username', sa.TEXT(), nullable=False),
                    sa.Column('email', sa.TEXT(), nullable=False),
                    sa.Column('password', sa.TEXT(), nullable=False),
                    sa.Column('status', sa.TEXT(), nullable=False),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    op.create_table('access_token',
                    sa.Column('token', sa.TEXT(), nullable=False),
                    sa.Column('user_id', postgresql.UUID(), nullable=False),
                    sa.Column('generated_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['todo_user.uuid'], ),
                    sa.PrimaryKeyConstraint('token')
                    )
    op.create_table('todo',
                    sa.Column('uuid', postgresql.UUID(), server_default=sa.text(
                        'uuid_generate_v1mc()'), nullable=False),
                    sa.Column('user_id', postgresql.UUID(), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('duration', sa.BIGINT(), nullable=False),
                    sa.Column('started_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('is_completed', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['todo_user.uuid'], ),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('todo')
    op.drop_table('access_token')
    op.drop_table('todo_user')
    # ### end Alembic commands ###
